desc:HosiFX Simple EQ
version:1.0
author:Hosi Prod
changelog:
+ v1.0 - Initial release.
about:
  # HosiFX Simple EQ
    A simple and effective Simple EQ.
// Copyright 2024 HosiFX. All rights reserved.
// Lấy cảm hứng từ giao diện của MuseFX Simple EQ.

// --- Sliders ---
// Núm vặn "Amount" chính, điều khiển cường độ của EQ.
slider1:50<0,100,0.1>Amount (%)
// Bộ chọn preset, được thiết kế cho các tác vụ EQ.
slider2:0<0,24,1{Air,Backing Vocals,Bass Body,Boost Vocals,Clarity,Low Thump,Mix Low End,Mud Reduction,Presence,Reduce Sizzle,Scoop,Strings Lustre,Sub Bass,Tame Rumble,Tight Attack,Vintage Vibe,Remove Boxiness,Guitar Body,Snare Snap,Kick Punch,Hi-Hat Shimmer,De-Boom,Telephone FX,Warm Pad,Lead Synth Cut}>Preset

// --- I/O Pins ---
in_pin:left input
in_pin:right input
out_pin:left output
out_pin:right output

// --- Options ---
options:gfx_hz=120
options:no_meter

@init
// --- Khởi tạo chung ---
gfx_clear=0;
tau = 2 * $pi;
// Biến trạng thái tương tác chuột.
dragging = 0;
// Cờ để kích hoạt cập nhật tham số.
caller = 1;

// --- Khởi tạo Filter ---
// Khởi tạo các hệ số và biến trạng thái của bộ lọc biquad.
b0=1; b1=0; b2=0; a1=0; a2=0;
l_x1=0; l_x2=0; l_y1=0; l_y2=0;
r_x1=0; r_x2=0; r_y1=0; r_y2=0;

// --- Tên Preset ---
// Danh sách này khớp với định nghĩa trong slider2.
preset_names.0 = "Air";
preset_names.1 = "Backing Vocals";
preset_names.2 = "Bass Body";
preset_names.3 = "Boost Vocals";
preset_names.4 = "Clarity";
preset_names.5 = "Low Thump";
preset_names.6 = "Mix Low End";
preset_names.7 = "Mud Reduction";
preset_names.8 = "Presence";
preset_names.9 = "Reduce Sizzle";
preset_names.10 = "Scoop";
preset_names.11 = "Strings Lustre";
preset_names.12 = "Sub Bass";
preset_names.13 = "Tame Rumble";
preset_names.14 = "Tight Attack";
preset_names.15 = "Vintage Vibe";
preset_names.16 = "Remove Boxiness";
preset_names.17 = "Guitar Body";
preset_names.18 = "Snare Snap";
preset_names.19 = "Kick Punch";
preset_names.20 = "Hi-Hat Shimmer";
preset_names.21 = "De-Boom";
preset_names.22 = "Telephone FX";
preset_names.23 = "Warm Pad";
preset_names.24 = "Lead Synth Cut";
num_presets = 25;

// --- Hàm tính toán hệ số Filter ---
function calculate_coeffs(type, freq, q, gain_db) (
  A = 10^(gain_db / 40);
  w0 = tau * freq / srate;
  cos_w0 = cos(w0);
  sin_w0 = sin(w0);
  alpha = sin_w0 / (2 * q);

  type == 0 ? ( // Peaking EQ
    b0 = 1 + alpha * A;
    b1 = -2 * cos_w0;
    b2 = 1 - alpha * A;
    a0 = 1 + alpha / A;
    a1 = -2 * cos_w0;
    a2 = 1 - alpha / A;
  ) : type == 1 ? ( // Low Shelf
    b0 = A * ((A + 1) - (A - 1) * cos_w0 + 2 * sqrt(A) * alpha);
    b1 = 2 * A * ((A - 1) - (A + 1) * cos_w0);
    b2 = A * ((A + 1) - (A - 1) * cos_w0 - 2 * sqrt(A) * alpha);
    a0 = (A + 1) + (A - 1) * cos_w0 + 2 * sqrt(A) * alpha;
    a1 = -2 * ((A - 1) + (A + 1) * cos_w0);
    a2 = (A + 1) + (A - 1) * cos_w0 - 2 * sqrt(A) * alpha;
  ) : type == 2 ? ( // High Shelf
    b0 = A * ((A + 1) + (A - 1) * cos_w0 + 2 * sqrt(A) * alpha);
    b1 = -2 * A * ((A - 1) + (A + 1) * cos_w0);
    b2 = A * ((A + 1) + (A - 1) * cos_w0 - 2 * sqrt(A) * alpha);
    a0 = (A + 1) - (A - 1) * cos_w0 + 2 * sqrt(A) * alpha;
    a1 = 2 * ((A - 1) - (A + 1) * cos_w0);
    a2 = (A + 1) - (A - 1) * cos_w0 - 2 * sqrt(A) * alpha;
  );

  // Chuẩn hóa các hệ số
  b0 /= a0; b1 /= a0; b2 /= a0; a1 /= a0; a2 /= a0;
);

// --- Định nghĩa tham số Preset ---
function update_parameters() (
  // Núm 'Amount' điều khiển gain của EQ.
  // 0% = full cut, 50% = 0dB (không thay đổi), 100% = full boost.
  amount = (slider1 - 50) / 50;

  // Chọn preset dựa trên slider2
  preset = slider2|0;

  // Giá trị mặc định
  filter_type = 0; // Peaking
  center_freq = 1000;
  q_val = 0.707;
  max_gain_db = 12;

  // Định nghĩa tham số cho mỗi preset EQ
  preset == 0 ? ( // Air
    filter_type=2; center_freq=12000; q_val=0.7; max_gain_db=10;
  ) : preset == 1 ? ( // Backing Vocals
    filter_type=0; center_freq=800; q_val=1.5; max_gain_db=-9;
  ) : preset == 2 ? ( // Bass Body
    filter_type=1; center_freq=150; q_val=0.7; max_gain_db=8;
  ) : preset == 3 ? ( // Boost Vocals
    filter_type=0; center_freq=2500; q_val=1.2; max_gain_db=9;
  ) : preset == 4 ? ( // Clarity
    filter_type=0; center_freq=5000; q_val=2.0; max_gain_db=10;
  ) : preset == 5 ? ( // Low Thump
    filter_type=0; center_freq=80; q_val=1.0; max_gain_db=9;
  ) : preset == 6 ? ( // Mix Low End
    filter_type=1; center_freq=200; q_val=0.7; max_gain_db=-12;
  ) : preset == 7 ? ( // Mud Reduction
    filter_type=0; center_freq=350; q_val=1.5; max_gain_db=-10;
  ) : preset == 8 ? ( // Presence
    filter_type=0; center_freq=4000; q_val=1.5; max_gain_db=8;
  ) : preset == 9 ? ( // Reduce Sizzle
    filter_type=2; center_freq=8000; q_val=0.7; max_gain_db=-15;
  ) : preset == 10 ? ( // Scoop
    filter_type=0; center_freq=1000; q_val=1.0; max_gain_db=-9;
  ) : preset == 11 ? ( // Strings Lustre
    filter_type=2; center_freq=10000; q_val=1.0; max_gain_db=8;
  ) : preset == 12 ? ( // Sub Bass
    filter_type=1; center_freq=60; q_val=0.7; max_gain_db=10;
  ) : preset == 13 ? ( // Tame Rumble
    filter_type=1; center_freq=80; q_val=0.7; max_gain_db=-18;
  ) : preset == 14 ? ( // Tight Attack
    filter_type=0; center_freq=1500; q_val=2.5; max_gain_db=9;
  ) : preset == 15 ? ( // Vintage Vibe
    filter_type=0; center_freq=900; q_val=0.6; max_gain_db=7;
  ) : preset == 16 ? ( // Remove Boxiness
    filter_type=0; center_freq=500; q_val=2.0; max_gain_db=-10;
  ) : preset == 17 ? ( // Guitar Body
    filter_type=0; center_freq=250; q_val=1.2; max_gain_db=6;
  ) : preset == 18 ? ( // Snare Snap
    filter_type=0; center_freq=5000; q_val=2.0; max_gain_db=8;
  ) : preset == 19 ? ( // Kick Punch
    filter_type=0; center_freq=100; q_val=1.5; max_gain_db=7;
  ) : preset == 20 ? ( // Hi-Hat Shimmer
    filter_type=2; center_freq=7000; q_val=0.7; max_gain_db=9;
  ) : preset == 21 ? ( // De-Boom
    filter_type=1; center_freq=120; q_val=0.7; max_gain_db=-12;
  ) : preset == 22 ? ( // Telephone FX
    filter_type=0; center_freq=1500; q_val=3.0; max_gain_db=15;
  ) : preset == 23 ? ( // Warm Pad
    filter_type=2; center_freq=4000; q_val=0.7; max_gain_db=-6;
  ) : preset == 24 ? ( // Lead Synth Cut
    filter_type=0; center_freq=2000; q_val=1.8; max_gain_db=9;
  );

  // Gain được điều chỉnh bởi núm 'Amount'
  current_gain_db = max_gain_db * amount;

  // Tính toán các hệ số filter
  calculate_coeffs(filter_type, center_freq, q_val, current_gain_db);
);

@slider
// Khi bất kỳ thanh trượt nào thay đổi, hãy đặt cờ 'caller'.
caller = 1;

@block
// Cập nhật tham số nếu một thanh trượt đã được di chuyển.
caller == 1 ? (
  update_parameters();
);

@sample
// --- Xử lý âm thanh thời gian thực ---

// Cập nhật tham số nếu một thanh trượt đã được di chuyển.
caller == 1 ? (
  update_parameters();
  caller = 0;
);

// Áp dụng bộ lọc biquad cho cả hai kênh
// Kênh trái
l_out = b0*spl0 + b1*l_x1 + b2*l_x2 - a1*l_y1 - a2*l_y2;
l_x2 = l_x1; l_x1 = spl0;
l_y2 = l_y1; l_y1 = l_out;
spl0 = l_out;

// Kênh phải
r_out = b0*spl1 + b1*r_x1 + b2*r_x2 - a1*r_y1 - a2*r_y2;
r_x2 = r_x1; r_x1 = spl1;
r_y2 = r_y1; r_y1 = r_out;
spl1 = r_out;

@gfx 640 400
// --- Vẽ và tương tác GUI ---
w=gfx_w; h=gfx_h;
size = min(w,h);
is_retina = gfx_ext_flags & 1;

// --- Màu sắc và kích thước (Chủ đề Teal) ---
bg_r=0.2; bg_g=0.55; bg_b=0.5;
knob_color_r=0.4; knob_color_g=0.8; knob_color_b=0.75;
text_color_r=0.95; text_color_g=0.98; text_color_b=0.98;
logo_color_r=0.95; logo_color_g=0.98; logo_color_b=0.98;
hosifx_logo_color_r = 0.25; hosifx_logo_color_g = 0.6; hosifx_logo_color_b = 0.55; // Màu HosiFX chìm vào nền
dot_color_r=0.3; dot_color_g=0.65; dot_color_b=0.6;
dot_active_color_r = 0.9;
dot_active_color_g = 0.95;
dot_active_color_b = 0.95;

knob_x = w/2;
knob_y = h/2 + size*0.05;
knob_r = size*0.3;
knob_w = size*0.08;
knob_inner_r = knob_r - knob_w;
knob_as = -tau * 0.625; // Góc bắt đầu (-225 độ)
knob_range = tau * 0.75; // Toàn bộ phạm vi góc (270 độ)

// --- Vẽ ---
gfx_a = 1;
gfx_aa = 1; // Bật khử răng cưa

// Nền
gfx_set(bg_r, bg_g, bg_b, 1);
gfx_rect(0,0,w,h);

// Các chấm chỉ báo xung quanh núm vặn
num_dots = 12;
i = 0;
loop(num_dots,
  angle = knob_as + (i / (num_dots-1)) * knob_range;
  dot_x = knob_x + cos(angle) * (knob_r + size*0.01);
  dot_y = knob_y + sin(angle) * (knob_r + size*0.01);
  dot_size = size * 0.012;

  // Tô màu các chấm dựa trên vị trí núm vặn
  (i / (num_dots-1) - 0.001 <= slider1/100) ?
    gfx_set(dot_active_color_r, dot_active_color_g, dot_active_color_b) :
    gfx_set(dot_color_r, dot_color_g, dot_color_b);

  gfx_circle(dot_x, dot_y, dot_size, 1);
  i+=1;
);

// Núm vặn chính
// Bóng đổ
gfx_set(0,0,0,0.2);
gfx_circle(knob_x, knob_y+size*0.015, knob_r, 1);
// Thân núm
gfx_set(0.9, 0.92, 0.92, 1); // Màu xám nhạt đồng nhất
gfx_circle(knob_x, knob_y, knob_r, 1);

// Vòng trong của núm
gfx_set(bg_r, bg_g, bg_b, 0.5);
gfx_circle(knob_x, knob_y, knob_inner_r, 1);

// Chỉ báo trên núm vặn
indicator_angle = knob_as + (slider1/100) * knob_range;
indicator_radius = knob_inner_r * 0.7;
indicator_x = knob_x + cos(indicator_angle) * indicator_radius;
indicator_y = knob_y + sin(indicator_angle) * indicator_radius;
indicator_size = size * 0.02;
gfx_set(0.2, 0.2, 0.2, 0.8);
gfx_circle(indicator_x, indicator_y, indicator_size, 1);

// --- Nhãn văn bản ---
gfx_set(text_color_r, text_color_g, text_color_b);

// Tên Preset
font_size_preset = size * 0.09;
gfx_setfont(1, "Arial", font_size_preset);
preset_name = preset_names[slider2|0];
gfx_measurestr(preset_name, preset_w, preset_h);
preset_x = knob_x - preset_w/2;
preset_y = knob_y - knob_r - size*0.18;
gfx_x = preset_x;
gfx_y = preset_y;
gfx_drawstr(preset_name);

// --- Logo và giá trị (sắp xếp lại tương tự HosiFX Master) ---

// --- Giá trị Amount (dưới cùng) ---
gfx_set(text_color_r, text_color_g, text_color_b);
font_size_val = size*0.05;
gfx_setfont(1, "Arial", font_size_val);
sprintf(#val_str, "%.1f %%", slider1);
gfx_measurestr(#val_str, val_w, val_h);
y_pos_val = h - val_h - size*0.055;
gfx_x = knob_x - val_w/2;
gfx_y = y_pos_val;
gfx_drawstr(#val_str);

// --- Logo SIMPLE EQ (trên giá trị) ---
gfx_set(logo_color_r, logo_color_g, logo_color_b);
font_size_logo_sub = size*0.05;
gfx_setfont(1, "Arial Narrow Bold", font_size_logo_sub);
gfx_measurestr("SIMPLE EQ", logo_sub_w, logo_sub_h);
y_pos_sub = y_pos_val - logo_sub_h;
gfx_x = w/2 - logo_sub_w/2;
gfx_y = y_pos_sub;
gfx_drawstr("SIMPLE EQ");

// --- Logo HOSIFX (trên cùng) ---
gfx_set(hosifx_logo_color_r, hosifx_logo_color_g, hosifx_logo_color_b);
font_size_logo_main = size*0.07;
gfx_setfont(1, "Arial Black", font_size_logo_main);
gfx_measurestr("HOSIFX", logo_main_w, logo_main_h);
y_pos_main = y_pos_sub - logo_main_h * 1.05;
gfx_x = w/2 - logo_main_w/2;
gfx_y = y_pos_main;
gfx_drawstr("HOSIFX");


// --- Logic tương tác chuột ---
mouse_down = mouse_cap & 1;
mouse_up = (last_mouse_cap & 1) && !mouse_down;

// Điều khiển núm chính bằng con lăn chuột
slider1 += mouse_wheel * 2.0;
slider1 = min(max(slider1, 0), 100);
mouse_wheel != 0 ? caller = 1;

// Kiểm tra thao tác nhấp và kéo trên núm chính
dist = sqrt((mouse_x-knob_x)^2+(mouse_y-knob_y)^2);
mouse_down && (dragging==0) && (dist <= knob_r) ? (
  dragging=1;
  drag_start_y=mouse_y;
  drag_start_val=slider1;
);

// Xử lý hành động kéo
(dragging==1) ? (
  sensitivity=(100/size)*0.4;
  delta=(drag_start_y-mouse_y)*sensitivity;
  old_slider1 = slider1;
  slider1=drag_start_val+delta;
  slider1=max(0,min(100,slider1));
  old_slider1 != slider1 ? caller = 1;
);

// Thả kéo khi nút chuột được nhả ra
mouse_up ? (
  dragging=0;
);

// Đặt lại con lăn chuột và lưu trạng thái chuột cuối cùng
mouse_wheel = 0;
last_mouse_cap = mouse_cap;
