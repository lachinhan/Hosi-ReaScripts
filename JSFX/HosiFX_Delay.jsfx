desc:HosiFX Delay
version:1.0
author:Hosi Prod
changelog:
+ v1.0 - Initial release.
about:
  # HosiFX Delay
    A simple and effective Delay.
// Copyright 2024 HosiFX. All rights reserved.
// Lấy cảm hứng từ giao diện của MuseFX Delay.

// --- Sliders ---
// Núm vặn "Mix" chính, điều khiển tỷ lệ wet/dry.
slider1:30<0,100,0.1>Mix (%)
// Bộ chọn preset, được thiết kế cho các hiệu ứng delay.
slider2:5<0,14,1{Acoustic Air,Analog Slapback,Bumble Beat,Guitar Solo,Mix Exciter,Spacey Vocals,Stereo Arpeggio,Triplet Delay,Vintage Doubler,Ambient Wash,Dub Echo,Rhythmic Gate,Filtered Sweep,Lo-Fi Tape,Infinite Repeats}>Preset
// Nút bật/tắt đồng bộ tempo (đã ẩn khỏi giao diện mặc định).
slider3:0<0,1,1>-Sync
// Nút bật/tắt hiệu ứng Ping-Pong (đã ẩn khỏi giao diện mặc định).
slider4:0<0,1,1>-Ping-Pong

// --- I/O Pins ---
in_pin:left input
in_pin:right input
out_pin:left output
out_pin:right output

// --- Options ---
options:gfx_hz=120
options:no_meter
options:gmem=delay_buf,200000 // Cấp phát 2s buffer

@init
// --- Khởi tạo chung ---
gfx_clear=0;
tau = 2 * $pi;
// Biến trạng thái tương tác chuột.
dragging = 0;
// Cờ để kích hoạt cập nhật tham số.
caller = 1;

// --- Khởi tạo Delay ---
buf_size = srate * 2; // 2 giây buffer
buf_L = delay_buf;
buf_R = delay_buf + buf_size;
wp = 0; // Write pointer

// Filter states
lp_L = 0; lp_R = 0;
hp_L = 0; hp_R = 0;

// --- Tên Preset ---
// Danh sách này khớp với định nghĩa trong slider2.
preset_names.0 = "Acoustic Air";
preset_names.1 = "Analog Slapback";
preset_names.2 = "Bumble Beat";
preset_names.3 = "Guitar Solo";
preset_names.4 = "Mix Exciter";
preset_names.5 = "Spacey Vocals";
preset_names.6 = "Stereo Arpeggio";
preset_names.7 = "Triplet Delay";
preset_names.8 = "Vintage Doubler";
preset_names.9 = "Ambient Wash";
preset_names.10 = "Dub Echo";
preset_names.11 = "Rhythmic Gate";
preset_names.12 = "Filtered Sweep";
preset_names.13 = "Lo-Fi Tape";
preset_names.14 = "Infinite Repeats";
num_presets = 15;

// --- Định nghĩa tham số Preset ---
function update_parameters() (
  // Núm 'Mix' điều khiển tỷ lệ wet/dry
  wet = slider1 / 100;
  dry = 1 - wet;
  
  sync_on = slider3;
  pingpong_on = slider4;

  // Chọn preset dựa trên slider2
  preset = slider2|0;

  // Giá trị mặc định
  delay_ms = 300;
  delay_beats = 0.5; // Quarter note
  feedback = 0.3;
  lp_freq = 4000;
  hp_freq = 100;

  // Định nghĩa tham số cho mỗi preset
  preset == 0 ? ( // Acoustic Air
    delay_ms = 400; feedback = 0.4; lp_freq = 6000; hp_freq = 200;
  ) : preset == 1 ? ( // Analog Slapback
    delay_ms = 120; feedback = 0.2; lp_freq = 2500; hp_freq = 150;
  ) : preset == 2 ? ( // Bumble Beat
    delay_beats = 1/16; feedback = 0.5; lp_freq = 8000; hp_freq = 50;
  ) : preset == 3 ? ( // Guitar Solo
    delay_beats = 1/4; feedback = 0.45; lp_freq = 3500; hp_freq = 120;
  ) : preset == 4 ? ( // Mix Exciter
    delay_ms = 20; feedback = 0.1; lp_freq = 10000; hp_freq = 300;
  ) : preset == 5 ? ( // Spacey Vocals
    delay_beats = 0.5; feedback = 0.55; lp_freq = 5000; hp_freq = 250;
  ) : preset == 6 ? ( // Stereo Arpeggio
    delay_beats = 1/8; feedback = 0.3; lp_freq = 7000; hp_freq = 100; pingpong_on = 1;
  ) : preset == 7 ? ( // Triplet Delay
    delay_beats = 1/3; feedback = 0.4; lp_freq = 4500; hp_freq = 150;
  ) : preset == 8 ? ( // Vintage Doubler
    delay_ms = 35; feedback = 0; lp_freq = 6000; hp_freq = 100;
  ) : preset == 9 ? ( // Ambient Wash
    delay_beats = 1; feedback = 0.7; lp_freq = 2000; hp_freq = 300;
  ) : preset == 10 ? ( // Dub Echo
    delay_beats = 0.75; feedback = 0.8; lp_freq = 1500; hp_freq = 400;
  ) : preset == 11 ? ( // Rhythmic Gate
    delay_beats = 0.375; feedback = 0.2; lp_freq = 5000; hp_freq = 100;
  ) : preset == 12 ? ( // Filtered Sweep
    delay_beats = 0.5; feedback = 0.6; lp_freq = 1500; hp_freq = 500;
  ) : preset == 13 ? ( // Lo-Fi Tape
    delay_ms = 450; feedback = 0.4; lp_freq = 1200; hp_freq = 200;
  ) : preset == 14 ? ( // Infinite Repeats
    delay_beats = 1; feedback = 0.98; lp_freq = 3000; hp_freq = 150;
  );
  
  // Tính toán thời gian delay
  sync_on ? (
    delay_samps = delay_beats * 60 / tempo * srate;
  ) : (
    delay_samps = delay_ms * srate / 1000;
  );
  
  // Tính toán hệ số filter
  lp_alpha = 1 - exp(-tau * lp_freq / srate);
  hp_alpha = 1 - exp(-tau * hp_freq / srate);
);

@slider
// Khi bất kỳ thanh trượt nào thay đổi, hãy đặt cờ 'caller'.
caller = 1;

@block
// Cập nhật tham số nếu một thanh trượt đã được di chuyển.
caller == 1 ? (
  update_parameters();
);

@sample
// --- Xử lý âm thanh thời gian thực ---

// Cập nhật tham số nếu một thanh trượt đã được di chuyển.
caller == 1 ? (
  update_parameters();
  caller = 0;
);

// --- Đọc từ Delay Buffer ---
rp = wp - delay_samps;
rp_int = floor(rp);
rp_frac = rp - rp_int;

// Wrap around buffer
rp1 = (rp_int + buf_size) % buf_size;
rp2 = (rp_int + 1 + buf_size) % buf_size;

// Nội suy tuyến tính
delayed_L = buf_L[rp1] + (buf_L[rp2] - buf_L[rp1]) * rp_frac;
delayed_R = buf_R[rp1] + (buf_R[rp2] - buf_R[rp1]) * rp_frac;

// --- Filtering trên feedback path ---
// Low-pass
lp_L += (delayed_L - lp_L) * lp_alpha;
lp_R += (delayed_R - lp_R) * lp_alpha;
// High-pass
hp_L += (lp_L - hp_L) * hp_alpha;
hp_R += (lp_R - hp_R) * hp_alpha;
filtered_L = hp_L;
filtered_R = hp_R;

// --- Ghi vào Delay Buffer với Feedback và Ping-Pong ---
pingpong_on ? (
  feedback_L = filtered_R * feedback;
  feedback_R = filtered_L * feedback;
) : (
  feedback_L = filtered_L * feedback;
  feedback_R = filtered_R * feedback;
);

buf_L[wp] = spl0 + feedback_L;
buf_R[wp] = spl1 + feedback_R;
wp = (wp + 1) % buf_size;

// --- Mix ---
spl0 = spl0 * dry + filtered_L * wet;
spl1 = spl1 * dry + filtered_R * wet;


@gfx 640 400
// --- Vẽ và tương tác GUI ---
w=gfx_w; h=gfx_h;
size = min(w,h);
is_retina = gfx_ext_flags & 1;

// --- Màu sắc và kích thước (Chủ đề Red/Magenta) ---
bg_r=0.4; bg_g=0.18; bg_b=0.25;
knob_color_r=0.8; knob_color_g=0.7; knob_color_b=0.6;
text_color_r=0.98; text_color_g=0.92; text_color_b=0.95;
logo_color_r=0.98; logo_color_g=0.92; logo_color_b=0.95;
hosifx_logo_color_r = 0.5; hosifx_logo_color_g = 0.28; hosifx_logo_color_b = 0.35;
dot_color_r=0.6; dot_color_g=0.38; dot_color_b=0.45;
dot_active_color_r = 0.95;
dot_active_color_g = 0.8;
dot_active_color_b = 0.85;

knob_x = w/2;
knob_y = h/2 + size*0.05;
knob_r = size*0.3;
knob_w = size*0.08;
knob_inner_r = knob_r - knob_w;
knob_as = -tau * 0.625; // Góc bắt đầu (-225 độ)
knob_range = tau * 0.75; // Toàn bộ phạm vi góc (270 độ)

// --- Vẽ ---
gfx_a = 1;
gfx_aa = 1; // Bật khử răng cưa

// Nền
gfx_set(bg_r, bg_g, bg_b, 1);
gfx_rect(0,0,w,h);

// Các chấm chỉ báo xung quanh núm vặn
num_dots = 12;
i = 0;
loop(num_dots,
  angle = knob_as + (i / (num_dots-1)) * knob_range;
  dot_x = knob_x + cos(angle) * (knob_r + size*0.01);
  dot_y = knob_y + sin(angle) * (knob_r + size*0.01);
  dot_size = size * 0.012;

  // Tô màu các chấm dựa trên vị trí núm vặn
  (i / (num_dots-1) - 0.001 <= slider1/100) ?
    gfx_set(dot_active_color_r, dot_active_color_g, dot_active_color_b) :
    gfx_set(dot_color_r, dot_color_g, dot_color_b);

  gfx_circle(dot_x, dot_y, dot_size, 1);
  i+=1;
);

// Núm vặn chính
// Bóng đổ
gfx_set(0,0,0,0.2);
gfx_circle(knob_x, knob_y+size*0.015, knob_r, 1);
// Thân núm
gfx_set(0.9, 0.92, 0.92, 1); // Màu xám nhạt đồng nhất
gfx_circle(knob_x, knob_y, knob_r, 1);

// Vòng trong của núm
gfx_set(bg_r, bg_g, bg_b, 0.5);
gfx_circle(knob_x, knob_y, knob_inner_r, 1);

// Chỉ báo trên núm vặn
indicator_angle = knob_as + (slider1/100) * knob_range;
indicator_radius = knob_inner_r * 0.7;
indicator_x = knob_x + cos(indicator_angle) * indicator_radius;
indicator_y = knob_y + sin(indicator_angle) * indicator_radius;
indicator_size = size * 0.025;
gfx_set(dot_active_color_r, dot_active_color_g, dot_active_color_b, 0.9);
gfx_circle(indicator_x, indicator_y, indicator_size, 1);

// --- Nhãn văn bản ---
gfx_set(text_color_r, text_color_g, text_color_b);

// Tên Preset
font_size_preset = size * 0.09;
gfx_setfont(1, "Arial", font_size_preset);
preset_name = preset_names[slider2|0];
gfx_measurestr(preset_name, preset_w, preset_h);
preset_x = knob_x - preset_w/2;
preset_y = knob_y - knob_r - size*0.18;
gfx_x = preset_x;
gfx_y = preset_y;
gfx_drawstr(preset_name);

// --- Logo và giá trị ---
// Giá trị Mix (%)
gfx_set(text_color_r, text_color_g, text_color_b);
font_size_val = size*0.05;
gfx_setfont(1, "Arial", font_size_val);
sprintf(#val_str, "%.1f %%", slider1);
gfx_measurestr(#val_str, val_w, val_h);
y_pos_val = h - val_h - size*0.04; // Vị trí cho giá trị
gfx_x = knob_x - val_w/2;
gfx_y = y_pos_val;
gfx_drawstr(#val_str);

// Logo DELAY
gfx_set(logo_color_r, logo_color_g, logo_color_b);
font_size_logo_sub = size*0.05;
gfx_setfont(1, "Arial Narrow Bold", font_size_logo_sub);
gfx_measurestr("DELAY", logo_sub_w, logo_sub_h);
y_pos_sub = y_pos_val - logo_sub_h - size*0.01;
gfx_x = w/2 - logo_sub_w/2;
gfx_y = y_pos_sub;
gfx_drawstr("DELAY");

// Logo HOSIFX
gfx_set(hosifx_logo_color_r, hosifx_logo_color_g, hosifx_logo_color_b);
font_size_logo_main = size*0.07;
gfx_setfont(1, "Arial Black", font_size_logo_main);
gfx_measurestr("HOSIFX", logo_main_w, logo_main_h);
y_pos_main = y_pos_sub - logo_main_h * 1.05;
gfx_x = w/2 - logo_main_w/2;
gfx_y = y_pos_main;
gfx_drawstr("HOSIFX");

// --- Logic tương tác chuột ---
mouse_down = mouse_cap & 1;
mouse_up = (last_mouse_cap & 1) && !mouse_down;

// Điều khiển núm chính bằng con lăn chuột
slider1 += mouse_wheel * 2.0;
slider1 = min(max(slider1, 0), 100);
mouse_wheel != 0 ? caller = 1;

// Kiểm tra thao tác nhấp và kéo trên núm chính
dist = sqrt((mouse_x-knob_x)^2+(mouse_y-knob_y)^2);
mouse_down && (dragging==0) && (dist <= knob_r) ? (
  dragging=1;
  drag_start_y=mouse_y;
  drag_start_val=slider1;
);

// Xử lý hành động kéo
(dragging==1) ? (
  sensitivity=(100/size)*0.4;
  delta=(drag_start_y-mouse_y)*sensitivity;
  old_slider1 = slider1;
  slider1=drag_start_val+delta;
  slider1=max(0,min(100,slider1));
  old_slider1 != slider1 ? caller = 1;
);

// Thả kéo khi nút chuột được nhả ra
mouse_up ? (
  dragging=0;
);

// Đặt lại con lăn chuột và lưu trạng thái chuột cuối cùng
mouse_wheel = 0;
last_mouse_cap = mouse_cap;
